<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABLhJREFUeF7t
        3LGKXlUUxfExiAhBQbARTGVjIVY2lhILLSzTWvoKgk/gK9ha2opaCJZWNmIjiIURbQRBQQRFx3Xi31VM
        Yfa6c+/Md/acH2wIK1l37j7fJJBTzNmyLMuy3ETn5+e3Ne9ovmPGr2/z28tV0aE/pnlL86Pmop80b2se
        548vR9Eh39Lc03yreZj7mvGhPUp92YsO9RHNG5ovNamvNW9qbvG45TJ0kK9qvtBc1leaezx2SenwXtZ8
        Nk5yZ59rXuHLLA+jw3pB88E4uYN9qnmJL7tcpMN5XvO+5i/NVflb86HmRV5j0WHc0byn+VNzXcY3wfhb
        +RyvdfNo+ac172p+15yKPzTjm+MZXrM/LfuEZvzH7RfNqfpNM75ZnuK1+9Fy45pjfBA/a2bxq2Z8ME+y
        xvy0zP9dc8xi/usYvXxyzTGL+a5j9LKXueaYxRzXMXrBva45ZnGa1zF6qaOuOWZxGtcxeomruuaYxfVc
        x+iLXsc1xyyu7jpGX+QUrjlmcdx1jB56itccs9jvOkYPmeGaYxaXu45R8a5mpmuOWYwzvcsx16n0zYP6
        coQfOOY6istBOOY6estBOOY6estBOOY6estBOOY6estBOOY6estBOOY6estBOOY6estBOOY6elt8pHmW
        x7Q1dtR8PBbegsfU0dui/YfxH+06br834RF19GLUbwzWjlGvoxejfmOwdox6Hb0YdSNug7WMOEa9jl6M
        uhG3wVpGHKNeRy9G3YjbYC0jjlGvoxejbsRtsJYRx6jX0YtRN+I2WMuIY9Tr6MWoG3EbrGXEMep19GLU
        jbgN1jLiGPU6ejHqRtwGaxlxjHodvRh1I26DtYw4Rr2OXoy6EbfBWkYco15HL0bdiNtgLSOOUa+jF6Nu
        xG2wlhHHqNfRi1E34jZYy4hj1OvoxagbcRusZcQx6nX0YtSNuA3WMuIY9Tp6MepG3AZrGXGMeh29GHUj
        boO1jDhGvY5ejLoRt8FaRhyjXkcvRt2I22AtI45Rr6MXo27EbbCWEceo19GLUTfiNljLiGPU6+jFqBtx
        G6xlxDHqdfRi1I24DdYy4hj1Onox6kbcBmsZcYx6Hb0YdSNug7WMOEa9jl6MuhG3wVpGHKNeRy9G3Yjb
        YC0jjlGvoxejbsRtsJYRx6jX0YtRN+I2WMuIY9Tr6MWoG3EbrGXEMep19GLUjbgN1jLiGPU6ejHqRtwG
        axlxjHodvRh1I26DtYw4Rr2OXoy6EbfBWkYco15HL0bdiNtgLSOOUa+jF6NuxG2wlhHHqNfRi1E34jZY
        y4hj1OvoxagbcRusZcQx6nX0YtSNuA3WMuIY9Tp6MepG3AZrGXGMeh29GHUj3sOmn6EyOprNP5PkIh5r
        xDHqdfRi1I14D5t/hoq6m38myUU80ohj1Ovoxagb8R7WB7IFdSPew/hn5w6PLRsdzSfjAXvgsUYco15H
        L0bdiNtgLSOOUa+jF6NuxG2wlhHHqNfRi1E34jZYy4hj1OvoxagbcRusZcQx6nX0YtSNuA3WMuIY9Tp6
        MepG3AZrGXGMep063/9bzVA34jZYy4hT96nXqfT6KD6oB6gbcRusZcSJcaavUV+WZVmWZVmWZblmZ2f/
        AEq22hPNuTD/AAAAAElFTkSuQmCC
</value>
  </data>
</root>