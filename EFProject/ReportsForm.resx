<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAA2dJREFUeF7t
        2L1qlUEUheFE0IhgY2ObS/AObCxtjOQWbC1tvQVbS1tvws5erBTFxsrCQhAERfccXwdDsjQDmTV8sB7Y
        YOY7c9ZmBfO3FxER4fYz/omafMgNgZp8yA2BmnzIDYGafMgNgZp8yA2BmnzIDYGafMgNgZp8yA2BmnzI
        DYGafMgNgZp8yA2BmnzIDYGafMgNgZp8yF2OdTqOl2MdH3KXY52O4+VYx4fc5Vin43g51vEhdznW6The
        jnV8yHV4WvPy9z9PY52O47O092jvZcE6PuTO9q7mas1+zXHNh5oTWKfj+G8fax7UXKq5UvOmZjrW8SF3
        tnvE7dTH12oe13xtDxsedRw332qe1Fzn0U59fNQezkacD7kzvarZJ+6EOj+sed5exFHXzkp7dsjRCXXe
        /re1956KOB9yZ3tRc4vIU+rZbf7ZnXX2R3sv3nM6In3IdfhR86zmJtHD6u6Nmvbl63uNBdE+5Dp9qWnf
        Pw5Y4b/qtZdrHtZ8rrFiBR9yV2g/JR2zhlSvuVPzul1YgTV8yF2hfULusoZUr8knZLL2ZedRzeiXrPY7
        yKcaK1bwIdch39TPg9zZ8mPveZE7U34xHEHubEfE7dTHF/Gnk/vt4WzE+ZA72/uai/zj4kHN25rpWMeH
        XIf8+f08yF2OdTqOl2MdH3KXY52O4+VYx4fc5Vin43g51vEhdznW6ThejnV8yA2BmnzIDYGafMgNgZp8
        yA2BmnzIDYGafMgNgZp8yA2BmnzIDYGafMgNgZp8yA2BmnzIHcb1zWDtYVz3IXcY1zeDtYdx3YfcYVzf
        DNYexnUfcodxfTNYexjXfcgNgZp8yA2BmnzIDYGafMgNgZp8yA2BmnzIDYGafMgNgZp8yA2BmnzIHcb1
        zWDtYVz3IXcY1zeDtYdx3YfcYVzfDNYexnUfcodxfTNYexjXfcgNgZp8yA2BmnzIDYGafMgNgZp8yA2B
        mnzIDYGafMgNgZp8yA2BmnzIHcb1aYhZjnV8yB3G9WmIWY51fMgdxvVpiFmOdXzIHcb1aYhZjnV8yA2B
        mnzIDYGafMgNgZp8yA2BmnzIDYGafMgNgZp8yA2BmnzIDYGafMgNgZp8yA2BmnzIDYGafMgNgZp8yA2B
        mnzIDYGafMgNgZp8yA2BmiIiIkz29n4BbfDx3aoUnYIAAAAASUVORK5CYII=
</value>
  </data>
</root>