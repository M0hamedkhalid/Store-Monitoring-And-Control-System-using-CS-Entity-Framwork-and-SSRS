<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>