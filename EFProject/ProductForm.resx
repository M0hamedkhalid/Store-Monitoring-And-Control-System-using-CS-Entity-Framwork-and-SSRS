<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAA39JREFUeF7t
        2r+OTVEcxfGRUJFQG43KK9BRzhvQ6zyAZsZ4DS9ByztQ6ZQkKGg1EuO33e/9xZg/x1nzu2efe7I+yU5k
        O3ud314TbiYzO2ZmZmZmZtvu6OjoUazPsSbBaxPbU/ga6zGvnZ8Y7lKs57F+xZoMr09sT+lFrCu8fh5i
        oKuxXrbppsYIie2pvYl1gxH6ikF2Y71tU/XAGIntHj7EusMYfcQAd2N9adP0wiiJ7V6+x3rAKNOKFz+M
        9aNN0RPjJLZ7+hnrCeNsXrxs/eE9C4yV2J6D9mF/mbE2I15wLdar9ra5YLTE9ly8jnWd0WpF8K1Y79pb
        5oTxEttz8j7WbcarEYH3YrVvhGaHERPbc/Mt1n1GNDMz62P1mWRVqFVHjhWhVh05VoRadeRYEWrVkWNF
        qFVHjhWhVh05VoRadeRYEWrVkWNFqFVHjhWhVh05PbUfie7HuslIo8XZ9osYB2R1xUg6cnraZ5QLi6xn
        q8h+GEVHTk/yv4x/taxVZD+MoiOnp8ovSPsxdFeMoiOnpwNGubDIOlxF9sMoOnJ6ah/E7f/+XUYarZ2N
        1b4Y/lC346hVR44VoVYdOVaEWnXkWBFq1ZFjRahVR44VoVYdOVaEWnXkWBFq1ZFjRahVR44VoVYdOVaE
        WnXkWBFq1ZFjRahVR44VoVYdOVaEWnXkWBFq1ZFjRahVR44VoVYdOVaEWnXkWBFq1ZFjRahVR44VoVYd
        OVaEWnXkWBFq1ZGzNO2X5p6u/jiKei5Rq46cJTnkau1uY8pVzx1DhI6cpchS12Lvf8pVz53AcR05S3Ci
        1LX4u/PKVc+diqM6crbdmaWuxTOnlaueOxPHdORss8FS1+LZv8tVz52LIzpyFoNrJbYH8XhiezSO68hZ
        DK6V2B7E44nt0TiuI2cxuFZiexCPJ7ZH47iOnMXgWontQTye2B6N4zpyFoNrJbYH8XhiezSO68hZDK6V
        2B7E44nt0TiuI2cxuFZiexCPJ7ZH47iOnMXgWontQTye2B6N4zpyrAi16sixItSqI2drcY2N43WDeFxH
        ztbiGhvH6wbxuI6crcU1No7XDeJxHTlbi2tsHK8bxOM6cqwIterIsSLUqiPHilCrjhwrQq06cqwIterI
        sSLUqiPHilCrjhwrQq26yPi0irICH6lVFyF7LehPnF1E63CPWs3MzMzMzGZiZ+c3MBTF2ePK+6QAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>