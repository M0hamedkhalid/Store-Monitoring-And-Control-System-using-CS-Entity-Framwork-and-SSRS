<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABIdJREFUeF7t
        3E+IVVUcB/DRmdRorI0gjG0KIsUix6DRhQtxK4MI1cKFCxXUFBe1bi+OopYu3IiOA0NgabgJatNiqIUh
        /kFEKcgiCIXSIAv1+f2e85t33jze89537n2+c33fD3xh8pzf7917z9x3X8O7d0BERERERERERERERERE
        JKjVam8hh5GryD+I1GoPkNvIeWQbstgOV/fgRRYgx5BHiDzdn8gOO3TlQ3Muxnd8JenINLLADmN50JRn
        hsT5Aplnh7I4NOM14yE796mv7FC0hTkvI+8ih5D7SLM9NrU4NOMFvJ/dRebb4ciEucuRmyxs8BeyxKYU
        g0bXXMv+tsoORy6Y/wbS/Al0vw0Xg0b3fL++ts8OR26o+diX1nGBltpwPN+r731phyM31CxCfnPVwYQN
        x7NG/a6j68gs1Ox11cG/yDIbjuP7CLxjhyQ31CxEfnXVwREbjmNNJOI6Qqjb5cvr+GeWV224c76HQMfX
        EULdC8jPrkNw3IY7Zw0k8jpCqNvuOgT/I6/ZcGd8vZiOryOEukHkhusQnLDhzlixeFHXEULtVt+ijmfJ
        6zacn68VE3UdIdTyLLnuugQnbTg/KxQv+jpCqN3iugT8o+2bNpyPr5MGUdcRQu185LLrEkzacD5WJEH0
        dYRQ/4FvU8ezZIUNZ/M10iD6OkKon4dccp2CaRvOZgUSFLqOEOo3u07BYyTfW6GfL01G7fBEQT3Pkouu
        U3DWhp/OJstcZ5FCX15A/UbXKeBZkr3Qfq608AfyDTKFHEE+RXYjvGivR95GRpC2C4exH5FG522oPZso
        xfyN3EJ+QC4gp5CDyDmkEc+SDXboW/Pz5Bm6g7T/w6OfI8/YT8iLtgRz+XHpgdO2BHPZoPTGTluGwAak
        N/gn+nW2FJ7/d+khfrweseXQgiTie2RQC5KWT7QgaeFXel/RgqTlIy1IWr7WgqTlthYkLQ+0IInRgiRG
        C5IYLUhitCCJ0YIkRguSGC1IYrQgidGCJEYLkhguSNmP1uBtwUeRMeQlC3/+DPkPeV50ZT+5IGU+fIaP
        mmj7LW+MrbI5Vde1/WRxWY9n4m9M5lfuMWcUqfKZ0s39vMfCsh5glvuREpj7uS+ppG7u58xsId/3inrP
        NcsBc9f4kkrq5n7uni3kQzC/df8Ub9g1ywFzF/uSSurWfvIGn3BrA/8D4aeG2LcvLUgTzM27n1yM8GW5
        RhhYifBhj1eQVg98bGfMWmTC3LW+pJLK2k8e2xmENwEVf9QsmvDOokZHbSgT5jY/lnbKhpLDbfObWJfm
        fqL5h/416vhxMPNhkpizGmn+OPi+DScH21aN/UTzVs+J4v8Mtb2xEWPcyN85sQFvBRuyKcnBtlVnP/EC
        m9xLzcXfCn7+5vvnsIU/8/Rt/o3hPXfj1i5Z2Mbq7CdeiDc3xjpgbZKHba3GfuLFeJN8zMZOIOU9M73L
        uK1IdfYTLzqO/MItyMD3441WVjnY9ursJzZgCOGN9WcQPh+dT3tm+PMkwrFkL+B5cR9sX57r/RQRERER
        ERERERERESnfwMATGcyhTvyOK9AAAAAASUVORK5CYII=
</value>
  </data>
</root>